openapi: 3.0.1
info:
  title: Shelly Gen1 REST API
  version: 1.0.0
paths:
  /shelly:
    description: The HTTP method used for performing any of the requests below is intentionally ignored. Most endpoints will always return their specific JSON payload and perform actions if query parameters are specified.
    get:
      tags:
        - common-http-api
      operationId: http-dialect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /settings:
    description: 'Shelly Sense sends values from its internal sensors on the following topics:'
    get:
      tags:
        - shelly-sense
      operationId: shelly-sense-overview
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  temperature_units:
                    type: string
                    description: 'Set temperature units: <code>C</code> for Celsius and <code>F</code> for Fahrenheit'
                  pir_motion_duration_time:
                    type: number
                    description: Set duration time in seconds for motion flag after motion detection
                  pir_motion_led:
                    type: boolean
                    description: Set whether LED light should indicate motion detected
                  schedule:
                    type: boolean
                    description: Enable/disable scheduling timer
                  schedule_rules:
                    type: array
                    items:
                      type: string
                    description: Add or Remove weekly schedule. See description below
    parameters:
      - name: temperature_units
        in: query
        description: 'Set temperature units: <code>C</code> for Celsius and <code>F</code> for Fahrenheit'
        schema:
          type: string
      - name: pir_motion_duration_time
        in: query
        description: Set duration time in seconds for motion flag after motion detection
        schema:
          type: number
      - name: pir_motion_led
        in: query
        description: Set whether LED light should indicate motion detected
        schema:
          type: boolean
      - name: schedule
        in: query
        description: Enable/disable scheduling timer
        schema:
          type: boolean
      - name: schedule_rules
        in: query
        description: Add or Remove weekly schedule. See description below
        schema:
          type: array
          items:
            type: string
  /settings/ap:
    description: Provides information about the current WiFi AP configuration and allows changes. The returned document is identical to the one returned by <code>/settings</code> in the <code>wifi_ap</code> key. Shelly devices do not allow the SSID for AP WiFi mode to be changed.
    get:
      tags:
        - common-http-api
      operationId: settings-ap
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                    description: Set to <code>1</code> to return the device to AP WiFi mode
                  key:
                    type: string
                    description: WiFi password required for association with the device's AP
    parameters:
      - name: enabled
        in: query
        description: Set to <code>1</code> to return the device to AP WiFi mode
        schema:
          type: boolean
      - name: key
        in: query
        description: WiFi password required for association with the device's AP
        schema:
          type: string
  /settings/sta:
    description: Provides information about the current WiFi Client mode configuration and allows changes. The returned document is identical to the one returned by <code>/settings</code> in the <code>wifi_sta</code> key.
    get:
      tags:
        - common-http-api
      operationId: settings-sta
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                    description: Set to <code>1</code> to make STA the current WiFi mode
                  ssid:
                    type: string
                    description: The WiFi SSID to associate with
                  key:
                    type: string
                    description: The password required for associating to the given WiFi SSID
                  ipv4_method:
                    type: string
                    description: <code>dhcp</code> or <code>static</code>
                  ip:
                    type: string
                    description: Local IP address if <code>ipv4_method</code> is <code>static</code>
                  netmask:
                    type: string
                    description: Mask if <code>ipv4_method</code> is <code>static</code>
                  gateway:
                    type: string
                    description: Local gateway IP address if <code>ipv4_method</code> is <code>static</code>
                  dns:
                    type: string
                    description: DNS address if <code>ipv4_method</code> is <code>static</code>
    parameters:
      - name: enabled
        in: query
        description: Set to <code>1</code> to make STA the current WiFi mode
        schema:
          type: boolean
      - name: ssid
        in: query
        description: The WiFi SSID to associate with
        schema:
          type: string
      - name: key
        in: query
        description: The password required for associating to the given WiFi SSID
        schema:
          type: string
      - name: ipv4_method
        in: query
        description: <code>dhcp</code> or <code>static</code>
        schema:
          type: string
      - name: ip
        in: query
        description: Local IP address if <code>ipv4_method</code> is <code>static</code>
        schema:
          type: string
      - name: netmask
        in: query
        description: Mask if <code>ipv4_method</code> is <code>static</code>
        schema:
          type: string
      - name: gateway
        in: query
        description: Local gateway IP address if <code>ipv4_method</code> is <code>static</code>
        schema:
          type: string
      - name: dns
        in: query
        description: DNS address if <code>ipv4_method</code> is <code>static</code>
        schema:
          type: string
  /settings/login:
    description: 'HTTP authentication configuration: <code>enabled</code> flag, credentials. <code>unprotected</code> is initially false and is used by the user interface to show a warning when auth is disabled. If the user wants to keep using Shelly without a password, they can set <code>unprotected</code> to hide the warning.'
    get:
      tags:
        - common-http-api
      operationId: settings-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                    description: Whether to require HTTP authentication
                  unprotected:
                    type: boolean
                    description: Whether the user is aware of the risks
                  username:
                    type: string
                    description: Length between 1 and 50
                  password:
                    type: string
                    description: Length between 1 and 50
    parameters:
      - name: enabled
        in: query
        description: Whether to require HTTP authentication
        schema:
          type: boolean
      - name: unprotected
        in: query
        description: Whether the user is aware of the risks
        schema:
          type: boolean
      - name: username
        in: query
        description: Length between 1 and 50
        schema:
          type: string
      - name: password
        in: query
        description: Length between 1 and 50
        schema:
          type: string
  /settings/cloud:
    description: 'Can set the <code>enabled</code> (connect to cloud) flag. When set, Shelly will keep a secure connection to Allterco''s servers and allow monitoring and control from anywhere.'
    get:
      tags:
        - common-http-api
      responses:
        '200':
          description: OK
  /settings/actions:
    description: "Since v1.8.0 devices support multiple actions.\nMax number of URLs per action is 5.\nMax URLs length is 256."
    get:
      tags:
        - common-http-api
      operationId: settings-actions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  index:
                    type: number
                    description: Channel number
                  name:
                    type: string
                    description: Action name
                  enabled:
                    type: boolean
                    description: Enable/disable action
                  'urls[]':
                    type: string
                    description: Action URL
    parameters:
      - name: index
        in: query
        description: Channel number
        schema:
          type: number
      - name: name
        in: query
        description: Action name
        schema:
          type: string
      - name: enabled
        in: query
        description: Enable/disable action
        schema:
          type: boolean
      - name: 'urls[]'
        in: query
        description: Action URL
        schema:
          type: string
  /status:
    description: Shelly Sense <code>status</code> command gives information about the device and all sensors status.
    get:
      tags:
        - shelly-sense
      operationId: shelly-sense-status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /reboot:
    description: When requested will cause a reboot of the device.
    get:
      tags:
        - common-http-api
      responses:
        '200':
          description: OK
  /ota:
    description: Provides information about the device firmware version and the ability to trigger an over-the-air update.
    get:
      tags:
        - common-http-api
      operationId: ota
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: Run firmware update from specified URL
                  update:
                    type: boolean
                    description: Run firmware update from default URL
                  beta:
                    type: boolean
                    description: Run firmware update from beta URL (if available)
    parameters:
      - name: url
        in: query
        description: Run firmware update from specified URL
        schema:
          type: string
      - name: update
        in: query
        description: Run firmware update from default URL
        schema:
          type: boolean
      - name: beta
        in: query
        description: Run firmware update from beta URL (if available)
        schema:
          type: boolean
  /ota/check:
    description: Manual check for new firmware version.
    get:
      tags:
        - common-http-api
      operationId: ota-check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /wifiscan:
    description: Only available when in AP mode. Starts a WiFi scan and provides information about found networks.
    get:
      tags:
        - common-http-api
      operationId: wifiscan
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /debug/log:
    description: Retrieve debug log file 0
    get:
      tags:
        - common-http-api
      responses:
        '200':
          description: OK
  /debug/log1:
    description: Retrieve debug log file 1
    get:
      tags:
        - common-http-api
      responses:
        '200':
          description: OK
  /cit/d:
    description: Get CoIoT description package over HTTP
    get:
      tags:
        - common-http-api
      responses:
        '200':
          description: OK
  /sta_cache_reset:
    description: 'Reset STA cache: only applicable on devices which support STA caching (battery operated devices Shelly Door/Window 1/2, Shelly H&amp;T, Shelly Smoke, Shelly Flood, Shelly Button1)'
    get:
      tags:
        - common-http-api
      responses:
        '200':
          description: OK
  /ir:
    description: "To preset IR codes in your Shelly Sense you should use Shelly Cloud application from <a href=\"https://itunes.apple.com/si/app/shelly-cloud/id1147141552?mt=8\">iOS</a> or <a href=\"https://play.google.com/store/apps/details?id=allterco.bg.shelly\">Android</a> store.\nThese apps provide access to a huge database for TV, Hi-Fi sets and air conditioners.\n Any IR code can be added to Shelly Sense in \"pronto\" format  so you can command your exotic IR operated devices."
    get:
      tags:
        - shelly-sense
      responses:
        '200':
          description: OK
    parameters:
      - name: list
        in: query
        description: List for stored infrared devices in Shelly Sense
        schema:
          type: string
      - name: add
        in: query
        description: Add new device into Shelly Sense. For more information see <a href="https://shelly-api-docs.shelly.cloud/gen1/#shelly-sense-ir-add"><code>/ir/add</code></a>
        schema:
          type: string
      - name: remove
        in: query
        description: Remove IR code or device stored in Shelly Sense. See <a href="https://shelly-api-docs.shelly.cloud/gen1/#shelly-sense-ir-remove"><code>/ir/remove</code></a>
        schema:
          type: string
      - name: emit
        in: query
        description: Send IR code from Shelly Sens.  See <a href="https://shelly-api-docs.shelly.cloud/gen1/#shelly-sense-ir-emit"><code>/ir/emit</code></a>
        schema:
          type: string
  /ir/list:
    description: Here is a sample list of stored IR codes in Shelly Sense for TV and Air-conditioning.
    get:
      tags:
        - shelly-sense
      operationId: shelly-sense-ir-list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /ir/add:
    description: You can add base64 encoded pronto code into Shelly Sense and send it by ID.
    get:
      tags:
        - shelly-sense
      responses:
        '200':
          description: OK
    parameters:
      - name: ID
        in: query
        description: ID of the IR code
        schema:
          type: string
      - name: name
        in: query
        description: Short description or name of the stored IR code
        schema:
          type: string
      - name: pronto
        in: query
        description: IR pronto code base64
        schema:
          type: string
  /ir/remove:
    description: 'Shelly Sense API support few ways to remove codes:'
    get:
      tags:
        - shelly-sense
      responses:
        '200':
          description: OK
    parameters:
      - name: ID
        in: query
        description: ID of the stored IR code into Shelly Sense
        schema:
          type: string
      - name: all
        in: query
        description: Remove all pronto codes from Shelly Sense
        schema:
          type: string
      - name: prefix
        in: query
        description: Remove pronto codes by prefix
        schema:
          type: string
  /ir/emit:
    description: 'You can send IR code from Shelly Sense using:'
    get:
      tags:
        - shelly-sense
      responses:
        '200':
          description: OK
    parameters:
      - name: type
        in: query
        description: 'Type of IR code you want to send: <code>stored</code> or <code>pronto</code>'
        schema:
          type: string
      - name: ID
        in: query
        description: Send stored pronto code by ID when <code>type</code> = <code>stored</code>
        schema:
          type: string
      - name: pronto
        in: query
        description: Send Base64 encoded pronto code when <code>type</code> = <code>pronto</code>
        schema:
          type: string
      - name: pronto_hex
        in: query
        description: Send HEX encoded pronto code when <code>type</code> = <code>pronto</code>
        schema:
          type: string